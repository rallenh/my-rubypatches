Fedora 30 Ruby / ruby-install / chruby notes

need to fork chrub/ruby-install/gem_home. ruby-install needs update for newer autotools (configure.ac)

On Fedora, build as static binary b/c I won't want to mess with LD_LIBRARY/ld.conf knobs, as chruby
is installing in a directory not in ld.conf configuration (loader will fail).

Make sure there's no ruby in the path.

Built with OpenSSL 1.0

Ruby 2.3.8
1. handle the compat-openssl10-devel issue by removing openssl-devel:
sudo rpm -e --nodeps openssl-devel.i686 openssl-devel.x86_64
sudo dnf install compat-openssl10-devel

  in Fedora 33+, compat-openssl10 has been left for dead. openssl1.1
  has been substituted. to make this work for FC33+, the RPMs can be found
  on the koji cooker: https://koji.fedoraproject.org/koji/buildinfo?buildID=1574056

  # remove the current version(s):
  $ sudo rpm -e --nodeps openssl-devel.i686 openssl-devel.x86_64

  # install just the x86_64 OpenSSL 1.0 -devel:
  $ sudo rpm -Uvh https://kojipkgs.fedoraproject.org//packages/compat-openssl10/1.0.2o/11.fc33/x86_64/compat-openssl10-devel-1.0.2o-11.fc33.x86_64.rpm

  # build Ruby 2.3.8
  $ ruby-install {...}

  # remove the OpenSSL 1.0 -devel:
  $ sudo rpm -e --nodeps compat-openssl10-devel

  # re-install the current OpenSSL -devel:
  $ sudo dnf install openssl-devel.i686 openssl-devel.x86_64

  caveats:
    a. mixing really old Ruby (and it's C-based bits) with new C-based bits
    might be problematic.

    b. any RubyGem installed that requires OpenSSL 1.0 (or the generation
    used with the ruby install) would need to have the OpenSSL -devel
    packages swapped.

2. Generate single patch file:
wget https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.8.tar.gz
tar -zxvf ruby-2.3.8.tar.gz
cp -r ruby-2.3.8 ruby-2.3.8.b
mv ruby-2.3.8 ruby-2.3.8.a
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.3.0-ruby_version-rebase.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.1.0-Prevent-duplicated-paths-when-empty-version-string-i-rebase.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.1.0-Enable-configuration-of-archlibdir-rebase.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.1.0-always-use-i386-rebase.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.1.0-custom-rubygems-location-rebase.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-1.9.3-mkmf-verbose.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.1.0-Allow-to-specify-additional-preludes-by-configuratio-rebase.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.2.3-Generate-preludes-using-miniruby.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.3.1-Rely-on-ldd-to-detect-glibc.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.3.5-Revert-experimental-rounding-on-i686-rebase.patch;
patch -p1 -d ./ruby-2.3.8.b < ./fedora/ruby-2.3.3-Revert-use-frozen-strings-in-serialized-specs-rebase.patch;
patch -p1 -d ./ruby-2.3.8.b < ./railsexpress/02-improve-gc-stats.patch;
patch -p1 -d ./ruby-2.3.8.b < ./railsexpress/03-display-more-detailed-stack-trace.patch;
diff -Nuarp ruby-2.3.8.a ruby-2.3.8.b > ruby-2.3.8-fedora-railsexpress-patches.patch;
rm -rf ruby-2.3.8.a ruby-2.3.8.b;
rm -rf ruby-2.3.8.tar.gz;

3. run ruby-install with single patch file:
don't need b/c we aren't cross building
  --target=x86_64-redhat-linux-gnu \
don't need b/c ruby-install sets this
  --prefix=/opt/rubies/ruby-2.3.8 \
need to surpress ruby-install's use of the system packager.
in this case, I know better.
  --no-install-deps \

sudo ruby-install \
  --patch ruby-2.3.8-fedora-railsexpress-patches.patch \
  --cleanup \
  --install-dir /opt/rubies/ruby-2.3.8 \
  --no-install-deps \
  ruby 2.3.8 -- \
  --build=x86_64-redhat-linux-gnu \
  --host=x86_64-redhat-linux-gnu \
  --exec-prefix=/opt/rubies/ruby-2.3.8 \
  --libdir=/opt/rubies/ruby-2.3.8/lib \
  --localstatedir=/opt/rubies/ruby-2.3.8/var \
  --datarootdir=/opt/rubies/ruby-2.3.8/share \
  --with-rubylibprefix=/opt/rubies/ruby-2.3.8/lib/ruby \
  --with-archlibdir=/opt/rubies/ruby-2.3.8/lib \
  '--with-rubyarchprefix=$(rubylibprefix)/$(arch)' \
  '--with-sitedir=$(rubylibprefix)/site_ruby' \
  '--with-sitearchdir=$(sitelibdir)/$(sitearch)' \
  '--with-vendordir=$(rubylibprefix)/vendor_ruby' \
  '--with-vendorarchdir=$(vendorlibdir)/$(sitearch)' \
  --with-rubyhdrdir=/opt/rubies/ruby-2.3.8/include/ruby \
  --with-rubyarchhdrdir=/opt/rubies/ruby-2.3.8/include/ruby \
  '--with-sitearchhdrdir=$(sitehdrdir)/$(arch)' \
  '--with-vendorarchhdrdir=$(vendorhdrdir)/$(arch)' \
  '--with-sitehdrdir=$(rubyhdrdir)/site_ruby' \
  '--with-vendorhdrdir=$(rubyhdrdir)/vendor_ruby' \
  --with-rubygemsdir=/opt/rubies/ruby-2.3.8/lib \
  --with-ruby-pc=ruby.pc \
  --disable-rpath \
  --disable-shared \
  --enable-static \
  --disable-multiarch \
  --enable-debug-env \
  CFLAGS="-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection" \
  CXXFLAGS="-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection" \
  EXTLDFLAGS="-Wl,-z,relro -Wl,--as-needed  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld"

4. remove compat-openssl10-devel and re-install openssl-devel:
sudo rpm -e --nodeps compat-openssl10-devel;
sudo dnf install openssl-devel.i686 openssl-devel.x86_64
sudo dnf check;

