diff -Nuarp ruby-2.5.8.a/common.mk ruby-2.5.8.b/common.mk
--- ruby-2.5.8.a/common.mk	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/common.mk	2020-11-15 17:59:26.915980300 -0500
@@ -147,7 +147,7 @@ ALLOBJS       = $(NORMALMAINOBJ) $(MINIO
 GOLFOBJS      = goruby.$(OBJEXT) golf_prelude.$(OBJEXT)
 
 DEFAULT_PRELUDES = $(GEM_PRELUDE)
-PRELUDE_SCRIPTS = $(srcdir)/prelude.rb $(DEFAULT_PRELUDES)
+PRELUDE_SCRIPTS = $(srcdir)/prelude.rb $(DEFAULT_PRELUDES) $(OPTIONAL_PRELUDES)
 GEM_PRELUDE   = $(srcdir)/gem_prelude.rb
 PRELUDES      = {$(srcdir)}prelude.c {$(srcdir)}miniprelude.c
 GOLFPRELUDES  = {$(srcdir)}golf_prelude.c
@@ -962,9 +962,9 @@ $(MINIPRELUDE_C): $(COMPILE_PRELUDE)
 		$(srcdir)/template/prelude.c.tmpl
 
 $(PRELUDE_C): $(COMPILE_PRELUDE) \
-	   $(PRELUDE_SCRIPTS)
+	   $(PRELUDE_SCRIPTS) $(PREP)
 	$(ECHO) generating $@
-	$(Q) $(BASERUBY) $(srcdir)/tool/generic_erb.rb -I$(srcdir) -c -o $@ \
+	$(Q) $(MINIRUBY) $(srcdir)/tool/generic_erb.rb -I$(srcdir) -c -o $@ \
 		$(srcdir)/template/prelude.c.tmpl $(PRELUDE_SCRIPTS)
 
 {$(VPATH)}golf_prelude.c: $(COMPILE_PRELUDE) {$(srcdir)}golf_prelude.rb
diff -Nuarp ruby-2.5.8.a/configure.ac ruby-2.5.8.b/configure.ac
--- ruby-2.5.8.a/configure.ac	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/configure.ac	2020-11-15 18:00:19.924178900 -0500
@@ -10,6 +10,7 @@ AC_DISABLE_OPTION_CHECKING
 AC_ARG_VAR([cflags], [additional CFLAGS])
 AC_ARG_VAR([cppflags], [additional CPPFLAGS])
 AC_ARG_VAR([cxxflags], [additional CXXFLAGS])
+ORIG_LIBS=$LIBS
 
 AC_DEFUN([RUBY_RM_RECURSIVE], [
 m4_version_prereq([2.70], [-1], [
@@ -164,7 +165,7 @@ RUBY_BASE_NAME=`echo ruby | sed "$progra
 RUBYW_BASE_NAME=`echo rubyw | sed "$program_transform_name"`
 AC_SUBST(RUBY_BASE_NAME)
 AC_SUBST(RUBYW_BASE_NAME)
-AC_SUBST(RUBY_VERSION_NAME, '${RUBY_BASE_NAME}-${ruby_version}')
+AC_SUBST(RUBY_VERSION_NAME, '${RUBY_BASE_NAME}-${ruby_version_dir_name}')
 
 AC_CANONICAL_TARGET
 test x"$target_alias" = x &&
@@ -2939,13 +2940,11 @@ AS_IF([test x"$enable_pthread" = xyes],
 	AC_DEFINE(_THREAD_SAFE)
 	AC_DEFINE(HAVE_LIBPTHREAD)
 	AC_CHECK_HEADERS(pthread_np.h, [], [], [@%:@include <pthread.h>])
-	AS_CASE([$pthread_lib],
-	[c],    [],
-	[root], [],
-	[c_r],  [MAINLIBS="-pthread $MAINLIBS"],
-	        [AS_CASE(["$target_os"],
-		    [openbsd*|mirbsd*], [LIBS="-pthread $LIBS"],
-		    [LIBS="-l$pthread_lib $LIBS"])])
+	AS_CASE(["$pthread_lib:$target_os"],
+		[c:*], [],
+		[root:*], [],
+		[c_r:*|*:openbsd*|*:mirbsd*],  [LIBS="-pthread $LIBS"],
+		[LIBS="-l$pthread_lib $LIBS"])
     ], [
 	AC_MSG_WARN("Don't know how to find pthread library on your system -- thread support disabled")
     ])
@@ -3624,7 +3623,7 @@ LIBRUBY_A='lib$(RUBY_SO_NAME)-static.a'
 LIBRUBY='$(LIBRUBY_A)'
 LIBRUBYARG_STATIC='-l$(RUBY_SO_NAME)-static'
 LIBRUBYARG='$(LIBRUBYARG_STATIC)'
-SOLIBS=
+SOLIBS='$(MAINLIBS)'
 
 AS_CASE(["$target_os"],
   [cygwin*|mingw*|haiku*|darwin*], [
@@ -3642,6 +3641,11 @@ AS_IF([test ${multiarch+set}], [
 ])
 
 archlibdir='${libdir}/${arch}'
+AC_ARG_WITH(archlibdir,
+	    AS_HELP_STRING([--with-archlibdir=DIR],
+			   [prefix for libruby [[LIBDIR/ARCH]]]),
+	    [archlibdir="$withval"])
+
 sitearchlibdir='${libdir}/${sitearch}'
 archincludedir='${includedir}/${arch}'
 sitearchincludedir='${includedir}/${sitearch}'
@@ -3685,9 +3689,6 @@ AS_CASE("$enable_shared", [yes], [
   LIBRUBY_RELATIVE=no
   test -z "$CCDLFLAGS" || CFLAGS="$CFLAGS $CCDLFLAGS"
   ENABLE_SHARED=yes
-  AS_IF([test "$rb_cv_binary_elf" = yes], [
-    SOLIBS='$(LIBS)'
-  ])
 
   # libdir can be overridden in config.site file (on OpenSUSE at least).
   libdir_basename=lib
@@ -3722,7 +3723,6 @@ AS_CASE("$enable_shared", [yes], [
 	])
 	],
     [freebsd*|dragonfly*], [
-	SOLIBS='$(LIBS)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)$(MINOR)'
 	LIBRUBY_SONAME='$(LIBRUBY_SO)'
 	AS_IF([test "$rb_cv_binary_elf" != "yes" ], [
@@ -3731,7 +3731,6 @@ AS_CASE("$enable_shared", [yes], [
 	])
 	],
     [netbsd*], [
-	SOLIBS='$(LIBS)'
 	LIBRUBY_SONAME='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)$(MINOR)'
 	LIBRUBY_SO="${LIBRUBY_SONAME}"'.$(TEENY)'
 	RUBY_APPEND_OPTIONS(LIBRUBY_DLDFLAGS, ['-Wl,-soname,$(LIBRUBY_SONAME)' "$LDFLAGS_OPTDIR"])
@@ -3742,11 +3741,9 @@ AS_CASE("$enable_shared", [yes], [
 	])
 	],
     [openbsd*|mirbsd*], [
-	SOLIBS='$(LIBS)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR).'`expr ${MINOR} \* 10 + ${TEENY}`
 	],
     [solaris*], [
-	SOLIBS='$(LIBS)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)'
 	LIBRUBY_SONAME='lib$(RUBY_SO_NAME).$(SOEXT).$(RUBY_PROGRAM_VERSION)'
 	LIBRUBY_ALIASES='$(LIBRUBY_SONAME) lib$(RUBY_SO_NAME).$(SOEXT)'
@@ -3764,7 +3761,7 @@ AS_CASE("$enable_shared", [yes], [
     [aix*], [
 	RUBY_APPEND_OPTIONS(LIBRUBY_DLDFLAGS, ["${linker_flag}-bnoentry" "$XLDFLAGS" "$LDFLAGS_OPTDIR"])
 	LIBRUBYARG_SHARED='-L${libdir} -l${RUBY_SO_NAME}'
-	SOLIBS='-lm -lc'
+	LIBS="$LIBS -lm -lc"
 	],
     [darwin*], [
 	LIBRUBY_LDSHARED='$(CC) -dynamiclib'
@@ -3784,12 +3781,11 @@ AS_CASE("$enable_shared", [yes], [
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT)'
 	LIBRUBY_SONAME='lib$(RUBY_BASE_NAME).$(RUBY_API_VERSION).$(SOEXT)'
 	LIBRUBY_ALIASES='$(LIBRUBY_SONAME) lib$(RUBY_INSTALL_NAME).$(SOEXT)'
-	SOLIBS='$(LIBS)'
 	],
     [interix*], [
 	LIBRUBYARG_SHARED='-L. -L${libdir} -l$(RUBY_SO_NAME)'
 	],
-    [mingw*|cygwin*|mswin*], [
+    [mingw*|mswin*], [
 	LIBRUBY_RELATIVE=yes
 	])
 ], [
@@ -4027,7 +4023,6 @@ AS_CASE(["$target_os"],
 	    ])
 	LIBRUBY_ALIASES=''
 	FIRSTMAKEFILE=GNUmakefile:cygwin/GNUmakefile.in
-	SOLIBS='$(LIBS)'
 	AS_IF([test x"$enable_shared" = xyes], [
 	    LIBRUBY='lib$(RUBY_SO_NAME).dll.a'
 	], [
@@ -4127,6 +4122,13 @@ AS_IF([test "${universal_binary-no}" = y
 		[rb_cv_architecture_available=yes], [rb_cv_architecture_available=no]))
 ])
 
+MAINLIBS="$LIBS"
+LIBS=$ORIG_LIBS
+AS_IF([test -n "${LIBS}"], [
+    libspat=`echo "${LIBS}" | sed 's/[[][|.*$^]]/\\&/g;s/^  */ /;s/^  *$/ /'`
+    MAINFLAGS=`echo " $MAINLIBS " | sed "s|$libspat"'||;s/^ *//;s/ *$//'`
+])
+LIBRUBYARG_STATIC="${LIBRUBYARG_STATIC} \$(MAINLIBS)"
 CPPFLAGS="$CPPFLAGS "'$(DEFS)'
 test -z "$CPPFLAGS" || CPPFLAGS="$CPPFLAGS "; CPPFLAGS="$CPPFLAGS"'${cppflags}'
 AS_IF([test -n "${cflags+set}"], [
@@ -4198,14 +4200,11 @@ test "$program_suffix" != NONE &&
 
 RUBY_INSTALL_NAME="${ri_prefix}"'$(RUBY_BASE_NAME)'"${ri_suffix}"
 AS_CASE(["$target_os"],
-  [cygwin*|mingw*], [
+  [mingw*], [
     RUBYW_INSTALL_NAME="${ri_prefix}"'$(RUBYW_BASE_NAME)'"${ri_suffix}"
     rubyw_install_name='$(RUBYW_INSTALL_NAME)'
     ])
 
-rubylibdir='${rubylibprefix}/${ruby_version}'
-rubyarchdir=${multiarch+'${rubyarchprefix}/${ruby_version}'}${multiarch-'${rubylibdir}/${arch}'}
-
 rubyarchprefix=${multiarch+'${archlibdir}/${RUBY_BASE_NAME}'}${multiarch-'${rubylibprefix}/${arch}'}
 AC_ARG_WITH(rubyarchprefix,
 	    AS_HELP_STRING([--with-rubyarchprefix=DIR],
@@ -4228,56 +4227,67 @@ AC_ARG_WITH(ridir,
 AC_SUBST(ridir)
 AC_SUBST(RI_BASE_NAME)
 
-AC_ARG_WITH(ruby-version,
-	    AS_HELP_STRING([--with-ruby-version=STR], [ruby version string for version specific directories [[full]] (full|minor|STR)]),
-            [ruby_version=$withval],
-            [ruby_version=full])
 unset RUBY_LIB_VERSION
-unset RUBY_LIB_VERSION_STYLE
-AS_CASE(["$ruby_version"],
-  [full],  [RUBY_LIB_VERSION_STYLE='3	/* full */'],
-  [minor], [RUBY_LIB_VERSION_STYLE='2	/* minor */'])
-AS_IF([test ${RUBY_LIB_VERSION_STYLE+set}], [
-    {
-    echo "#define RUBY_LIB_VERSION_STYLE $RUBY_LIB_VERSION_STYLE"
-    echo '#define STRINGIZE(x) x'
-    test -f revision.h -o -f "${srcdir}/revision.h" || echo '#define RUBY_REVISION 0'
-    echo '#include "version.h"'
-    echo 'ruby_version=RUBY_LIB_VERSION'
-    } > conftest.c
-    ruby_version="`$CPP -I. -I"${srcdir}" -I"${srcdir}/include" conftest.c | sed '/^ruby_version=/!d;s/ //g'`"
-    eval $ruby_version
-], [test -z "${ruby_version}"], [
-    AC_MSG_ERROR([No ruby version, No place for bundled libraries])
-], [
-    RUBY_LIB_VERSION="${ruby_version}"
-])
+RUBY_LIB_VERSION_STYLE='3	/* full */'
+{
+echo "#define RUBY_LIB_VERSION_STYLE $RUBY_LIB_VERSION_STYLE"
+echo '#define STRINGIZE(x) x'
+test -f revision.h -o -f "${srcdir}/revision.h" || echo '#define RUBY_REVISION 0'
+echo '#include "version.h"'
+echo 'ruby_version=RUBY_LIB_VERSION'
+} > conftest.c
+ruby_version="`$CPP -I. -I"${srcdir}" -I"${srcdir}/include" conftest.c | sed '/^ruby_version=/!d;s/ //g'`"
+eval $ruby_version
+
+RUBY_LIB_VERSION="${ruby_version}"
+
 AC_SUBST(RUBY_LIB_VERSION_STYLE)
 AC_SUBST(RUBY_LIB_VERSION)
 
+AC_ARG_WITH(ruby-version,
+	    AS_HELP_STRING([--with-ruby-version=STR], [ruby version string for version specific directories [[full]] (full|STR)]),
+            [ruby_version_dir_name=$withval],
+            [ruby_version_dir_name=full])
+AS_CASE(["$ruby_version_dir_name"],
+  [full], [ruby_version_dir_name='${ruby_version}'])
+
+ruby_version_dir=/'${ruby_version_dir_name}'
+
+if test -z "${ruby_version_dir_name}"; then
+    unset ruby_version_dir
+    AC_DEFINE(RUBY_LIB_VERSION_BLANK, 1)
+fi
+
+rubylibdir='${rubylibprefix}'${ruby_version_dir}
+rubyarchdir=${multiarch+'${rubyarchprefix}'${ruby_version_dir}}${multiarch-'${rubylibdir}/${arch}'}
+
 AC_ARG_WITH(sitedir,
 	    AS_HELP_STRING([--with-sitedir=DIR], [site libraries in DIR [[RUBY_LIB_PREFIX/site_ruby]], "no" to disable site directory]),
             [sitedir=$withval],
             [sitedir='${rubylibprefix}/site_ruby'])
-sitelibdir='${sitedir}/${ruby_version}'
+sitelibdir='${sitedir}'${ruby_version_dir}
 
 AC_ARG_WITH(sitearchdir,
 	    AS_HELP_STRING([--with-sitearchdir=DIR],
 			   [architecture dependent site libraries in DIR [[SITEDIR/SITEARCH]], "no" to disable site directory]),
             [sitearchdir=$withval],
-            [sitearchdir=${multiarch+'${rubysitearchprefix}/site_ruby/${ruby_version}'}${multiarch-'${sitelibdir}/${sitearch}'}])
+            [sitearchdir=${multiarch+'${rubysitearchprefix}/site_ruby'${ruby_version_dir}}${multiarch-'${sitelibdir}/${sitearch}'}])
 
 AC_ARG_WITH(vendordir,
 	    AS_HELP_STRING([--with-vendordir=DIR], [vendor libraries in DIR [[RUBY_LIB_PREFIX/vendor_ruby]], "no" to disable vendor directory]),
             [vendordir=$withval],
             [vendordir='${rubylibprefix}/vendor_ruby'])
-vendorlibdir='${vendordir}/${ruby_version}'
+vendorlibdir='${vendordir}'${ruby_version_dir}
 
 AC_ARG_WITH(vendorarchdir,
 	    AS_HELP_STRING([--with-vendorarchdir=DIR],
 			   [architecture dependent vendor libraries in DIR [[VENDORDIR/SITEARCH]], "no" to disable vendor directory]),
             [vendorarchdir=$withval],
-            [vendorarchdir=${multiarch+'${rubysitearchprefix}/vendor_ruby/${ruby_version}'}${multiarch-'${vendorlibdir}/${sitearch}'}])
+            [vendorarchdir=${multiarch+'${rubysitearchprefix}/vendor_ruby'${ruby_version_dir}}${multiarch-'${vendorlibdir}/${sitearch}'}])
+
+AC_ARG_WITH(rubygemsdir,
+           AS_HELP_STRING([--with-rubygemsdir=DIR], [custom rubygems directory]),
+            [rubygemsdir=$withval])
 
 AS_IF([test "${LOAD_RELATIVE+set}"], [
     AC_DEFINE_UNQUOTED(LOAD_RELATIVE, $LOAD_RELATIVE)
@@ -4294,6 +4304,7 @@ AC_SUBST(sitearchincludedir)dnl
 AC_SUBST(arch)dnl
 AC_SUBST(sitearch)dnl
 AC_SUBST(ruby_version)dnl
+AC_SUBST(ruby_version_dir_name)dnl
 AC_SUBST(rubylibdir)dnl
 AC_SUBST(rubyarchdir)dnl
 AC_SUBST(sitedir)dnl
@@ -4302,10 +4313,13 @@ AC_SUBST(sitearchdir)dnl
 AC_SUBST(vendordir)dnl
 AC_SUBST(vendorlibdir)dnl
 AC_SUBST(vendorarchdir)dnl
+AC_SUBST(rubygemsdir)dnl
 
 AC_SUBST(CONFIGURE, "`echo $0 | sed 's|.*/||'`")dnl
 AC_SUBST(configure_args, "`echo "${ac_configure_args}" | sed 's/\\$/$$/g'`")dnl
 
+target_cpu=`echo $target_cpu | sed s/i.86/i386/`
+
 AS_IF([test "${universal_binary-no}" = yes ], [
     arch="universal-${target_os}"
     AS_IF([test "${rb_cv_architecture_available}" = yes], [
@@ -4380,6 +4394,13 @@ AC_SUBST(rubyarchhdrdir)dnl
 AC_SUBST(sitearchhdrdir)dnl
 AC_SUBST(vendorarchhdrdir)dnl
 
+AC_ARG_WITH(prelude,
+		AS_HELP_STRING([--with-prelude=FILE-LIST], [specify additional preludes separated by space]),
+		[prelude=$withval])
+if test "$prelude" != ""; then
+    AC_SUBST(OPTIONAL_PRELUDES, $prelude)
+fi
+
 AC_ARG_WITH(mantype,
 	AS_HELP_STRING([--with-mantype=TYPE], [specify man page type; TYPE is one of man and doc]),
 		[
diff -Nuarp ruby-2.5.8.a/eval_error.c ruby-2.5.8.b/eval_error.c
--- ruby-2.5.8.a/eval_error.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/eval_error.c	2020-11-15 18:01:12.919523000 -0500
@@ -172,8 +172,8 @@ print_backtrace(const VALUE eclass, cons
 		     (len < threshold ? 0 : 9) + 1);
 
 #define TRACE_MAX (TRACE_HEAD+TRACE_TAIL+5)
-#define TRACE_HEAD 8
-#define TRACE_TAIL 5
+#define TRACE_HEAD 100
+#define TRACE_TAIL 100
 
 	for (i = 1; i < len; i++) {
 	    VALUE line = RARRAY_AREF(errat, reverse ? len - i : i);
diff -Nuarp ruby-2.5.8.a/ext/win32/resolv/extconf.rb ruby-2.5.8.b/ext/win32/resolv/extconf.rb
--- ruby-2.5.8.a/ext/win32/resolv/extconf.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32/resolv/extconf.rb	2020-11-15 18:00:32.814447400 -0500
@@ -1,3 +1,3 @@
-if have_library('iphlpapi', 'GetNetworkParams')
+if have_library('iphlpapi')
   create_makefile('win32/resolv')
 end
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole.c ruby-2.5.8.b/ext/win32ole/win32ole.c
--- ruby-2.5.8.a/ext/win32ole/win32ole.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole.c	2020-11-15 18:00:46.215213400 -0500
@@ -35,6 +35,7 @@ typedef HWND (WINAPI FNHTMLHELP)(HWND hw
                                  UINT uCommand, DWORD dwData);
 typedef BOOL (FNENUMSYSEMCODEPAGES) (CODEPAGE_ENUMPROC, DWORD);
 VALUE cWIN32OLE;
+LCID cWIN32OLE_lcid;
 
 #if defined(RB_THREAD_SPECIFIC) && (defined(__CYGWIN__))
 static RB_THREAD_SPECIFIC BOOL g_ole_initialized;
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole.h ruby-2.5.8.b/ext/win32ole/win32ole.h
--- ruby-2.5.8.a/ext/win32ole/win32ole.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole.h	2020-11-15 18:00:46.231475900 -0500
@@ -112,8 +112,8 @@ struct oledata {
     IDispatch *pDispatch;
 };
 
-VALUE cWIN32OLE;
-LCID cWIN32OLE_lcid;
+extern VALUE cWIN32OLE;
+extern LCID cWIN32OLE_lcid;
 
 struct oledata *oledata_get_struct(VALUE obj);
 LPWSTR ole_vstr2wc(VALUE vstr);
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_error.c ruby-2.5.8.b/ext/win32ole/win32ole_error.c
--- ruby-2.5.8.a/ext/win32ole/win32ole_error.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_error.c	2020-11-15 18:00:46.244708900 -0500
@@ -1,5 +1,8 @@
 #include "win32ole.h"
 
+VALUE eWIN32OLERuntimeError;
+VALUE eWIN32OLEQueryInterfaceError;
+
 static VALUE ole_hresult2msg(HRESULT hr);
 
 static VALUE
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_error.h ruby-2.5.8.b/ext/win32ole/win32ole_error.h
--- ruby-2.5.8.a/ext/win32ole/win32ole_error.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_error.h	2020-11-15 18:00:46.257932200 -0500
@@ -1,8 +1,8 @@
 #ifndef WIN32OLE_ERROR_H
 #define WIN32OLE_ERROR_H 1
 
-VALUE eWIN32OLERuntimeError;
-VALUE eWIN32OLEQueryInterfaceError;
+extern VALUE eWIN32OLERuntimeError;
+extern VALUE eWIN32OLEQueryInterfaceError;
 NORETURN(PRINTF_ARGS(void ole_raise(HRESULT hr, VALUE ecs, const char *fmt, ...), 3, 4));
 void Init_win32ole_error(void);
 
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_method.c ruby-2.5.8.b/ext/win32ole/win32ole_method.c
--- ruby-2.5.8.a/ext/win32ole/win32ole_method.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_method.c	2020-11-15 18:00:46.271156500 -0500
@@ -1,5 +1,7 @@
 #include "win32ole.h"
 
+VALUE cWIN32OLE_METHOD;
+
 static void olemethod_free(void *ptr);
 static size_t olemethod_size(const void *ptr);
 static VALUE ole_method_sub(VALUE self, ITypeInfo *pOwnerTypeInfo, ITypeInfo *pTypeInfo, VALUE name);
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_method.h ruby-2.5.8.b/ext/win32ole/win32ole_method.h
--- ruby-2.5.8.a/ext/win32ole/win32ole_method.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_method.h	2020-11-15 18:00:46.295090600 -0500
@@ -7,7 +7,7 @@ struct olemethoddata {
     UINT index;
 };
 
-VALUE cWIN32OLE_METHOD;
+extern VALUE cWIN32OLE_METHOD;
 VALUE folemethod_s_allocate(VALUE klass);
 VALUE ole_methods_from_typeinfo(ITypeInfo *pTypeInfo, int mask);
 VALUE create_win32ole_method(ITypeInfo *pTypeInfo, VALUE name);
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_record.c ruby-2.5.8.b/ext/win32ole/win32ole_record.c
--- ruby-2.5.8.a/ext/win32ole/win32ole_record.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_record.c	2020-11-15 18:00:46.319011900 -0500
@@ -1,5 +1,7 @@
 #include "win32ole.h"
 
+VALUE cWIN32OLE_RECORD;
+
 struct olerecorddata {
     IRecordInfo *pri;
     void *pdata;
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_record.h ruby-2.5.8.b/ext/win32ole/win32ole_record.h
--- ruby-2.5.8.a/ext/win32ole/win32ole_record.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_record.h	2020-11-15 18:00:46.341860600 -0500
@@ -1,7 +1,7 @@
 #ifndef WIN32OLE_RECORD_H
 #define WIN32OLE_RECORD_H 1
 
-VALUE cWIN32OLE_RECORD;
+extern VALUE cWIN32OLE_RECORD;
 void ole_rec2variant(VALUE rec, VARIANT *var);
 void olerecord_set_ivar(VALUE obj, IRecordInfo *pri, void *prec);
 VALUE create_win32ole_record(IRecordInfo *pri, void *prec);
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_type.c ruby-2.5.8.b/ext/win32ole/win32ole_type.c
--- ruby-2.5.8.a/ext/win32ole/win32ole_type.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_type.c	2020-11-15 18:00:46.359116200 -0500
@@ -1,5 +1,7 @@
 #include "win32ole.h"
 
+VALUE cWIN32OLE_TYPE;
+
 struct oletypedata {
     ITypeInfo *pTypeInfo;
 };
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_type.h ruby-2.5.8.b/ext/win32ole/win32ole_type.h
--- ruby-2.5.8.a/ext/win32ole/win32ole_type.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_type.h	2020-11-15 18:00:46.374902900 -0500
@@ -1,6 +1,8 @@
 #ifndef WIN32OLE_TYPE_H
 #define WIN32OLE_TYPE_H 1
-VALUE cWIN32OLE_TYPE;
+
+extern VALUE cWIN32OLE_TYPE;
+
 VALUE create_win32ole_type(ITypeInfo *pTypeInfo, VALUE name);
 ITypeInfo *itypeinfo(VALUE self);
 VALUE ole_type_from_itypeinfo(ITypeInfo *pTypeInfo);
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_typelib.c ruby-2.5.8.b/ext/win32ole/win32ole_typelib.c
--- ruby-2.5.8.a/ext/win32ole/win32ole_typelib.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_typelib.c	2020-11-15 18:00:46.386632800 -0500
@@ -1,5 +1,7 @@
 #include "win32ole.h"
 
+VALUE cWIN32OLE_TYPELIB;
+
 struct oletypelibdata {
     ITypeLib *pTypeLib;
 };
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_typelib.h ruby-2.5.8.b/ext/win32ole/win32ole_typelib.h
--- ruby-2.5.8.a/ext/win32ole/win32ole_typelib.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_typelib.h	2020-11-15 18:00:46.400855300 -0500
@@ -1,7 +1,7 @@
 #ifndef WIN32OLE_TYPELIB_H
 #define WIN32OLE_TYPELIB_H 1
 
-VALUE cWIN32OLE_TYPELIB;
+extern VALUE cWIN32OLE_TYPELIB;
 
 void Init_win32ole_typelib(void);
 ITypeLib * itypelib(VALUE self);
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_variable.c ruby-2.5.8.b/ext/win32ole/win32ole_variable.c
--- ruby-2.5.8.a/ext/win32ole/win32ole_variable.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_variable.c	2020-11-15 18:00:46.416118800 -0500
@@ -1,5 +1,7 @@
 #include "win32ole.h"
 
+VALUE cWIN32OLE_VARIABLE;
+
 struct olevariabledata {
     ITypeInfo *pTypeInfo;
     UINT index;
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_variable.h ruby-2.5.8.b/ext/win32ole/win32ole_variable.h
--- ruby-2.5.8.a/ext/win32ole/win32ole_variable.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_variable.h	2020-11-15 18:00:46.430355200 -0500
@@ -1,7 +1,7 @@
 #ifndef WIN32OLE_VARIABLE_H
 #define WIN32OLE_VARIABLE_H 1
 
-VALUE cWIN32OLE_VARIABLE;
+extern VALUE cWIN32OLE_VARIABLE;
 VALUE create_win32ole_variable(ITypeInfo *pTypeInfo, UINT index, VALUE name);
 void Init_win32ole_variable(void);
 
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_variant.c ruby-2.5.8.b/ext/win32ole/win32ole_variant.c
--- ruby-2.5.8.a/ext/win32ole/win32ole_variant.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_variant.c	2020-11-15 18:00:46.443110600 -0500
@@ -1,5 +1,7 @@
 #include "win32ole.h"
 
+VALUE cWIN32OLE_VARIANT;
+
 struct olevariantdata {
     VARIANT realvar;
     VARIANT var;
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_variant.h ruby-2.5.8.b/ext/win32ole/win32ole_variant.h
--- ruby-2.5.8.a/ext/win32ole/win32ole_variant.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_variant.h	2020-11-15 18:00:46.459387100 -0500
@@ -1,7 +1,7 @@
 #ifndef WIN32OLE_VARIANT_H
 #define WIN32OLE_VARIANT_H 1
 
-VALUE cWIN32OLE_VARIANT;
+extern VALUE cWIN32OLE_VARIANT;
 void ole_variant2variant(VALUE val, VARIANT *var);
 void Init_win32ole_variant(void);
 
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_variant_m.c ruby-2.5.8.b/ext/win32ole/win32ole_variant_m.c
--- ruby-2.5.8.a/ext/win32ole/win32ole_variant_m.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_variant_m.c	2020-11-15 18:00:46.471636500 -0500
@@ -1,5 +1,7 @@
 #include "win32ole.h"
 
+VALUE mWIN32OLE_VARIANT;
+
 void Init_win32ole_variant_m(void)
 {
     /*
diff -Nuarp ruby-2.5.8.a/ext/win32ole/win32ole_variant_m.h ruby-2.5.8.b/ext/win32ole/win32ole_variant_m.h
--- ruby-2.5.8.a/ext/win32ole/win32ole_variant_m.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/ext/win32ole/win32ole_variant_m.h	2020-11-15 18:00:46.484339900 -0500
@@ -1,7 +1,7 @@
 #ifndef WIN32OLE_VARIANT_M_H
 #define WIN32OLE_VARIANT_M_H 1
 
-VALUE mWIN32OLE_VARIANT;
+extern VALUE mWIN32OLE_VARIANT;
 void Init_win32ole_variant_m(void);
 
 #endif
diff -Nuarp ruby-2.5.8.a/gc.c ruby-2.5.8.b/gc.c
--- ruby-2.5.8.a/gc.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/gc.c	2020-11-15 18:00:59.783554200 -0500
@@ -533,6 +533,8 @@ typedef struct rb_objspace {
 #if GC_ENABLE_INCREMENTAL_MARK
 	unsigned int during_incremental_marking : 1;
 #endif
+        int collect_gc_stats;
+        int verbose_gc_stats;
     } flags;
 
     rb_event_flag_t hook_events;
@@ -605,14 +607,21 @@ typedef struct rb_objspace {
 
 	/* temporary profiling space */
 	double gc_sweep_start_time;
+        double gc_mark_start_time;
+
 	size_t total_allocated_objects_at_gc_start;
 	size_t heap_used_at_gc_start;
 
 	/* basic statistics */
 	size_t count;
+        double time;
 	size_t total_freed_objects;
 	size_t total_allocated_pages;
 	size_t total_freed_pages;
+        size_t total_mallocs;
+        size_t total_malloced_bytes;
+        size_t live_after_last_sweep;
+
     } profile;
     struct gc_list *global_list;
 
@@ -751,6 +760,7 @@ VALUE *ruby_initial_gc_stress_ptr = &rub
 #define heap_tomb               (&objspace->tomb_heap)
 #define dont_gc 		objspace->flags.dont_gc
 #define during_gc		objspace->flags.during_gc
+#define collect_gc_stats        objspace->flags.collect_gc_stats
 #define finalizing		objspace->atomic_flags.finalizing
 #define finalizer_table 	objspace->finalizer_table
 #define global_list		objspace->global_list
@@ -6073,6 +6083,155 @@ rb_gc_writebarrier_remember(VALUE obj)
 
 static st_table *rgengc_unprotect_logging_table;
 
+/*
+ *  call-seq:
+ *     GC.enable_stats	  => true or false
+ *
+ *  Enables garbage collection statistics, returning <code>true</code> if garbage
+ *  collection statistics was already enabled.
+ *
+ *     GC.enable_stats	 #=> false or true
+ *     GC.enable_stats	 #=> true
+ *
+ */
+
+VALUE
+rb_gc_enable_stats()
+{
+    rb_objspace_t *objspace = &rb_objspace;
+    int old = collect_gc_stats;
+    collect_gc_stats = 1;
+    return old ? Qtrue : Qfalse;
+}
+/*
+ *  call-seq:
+ *     GC.disable_stats	   => true or false
+ *
+ *  Disables garbage collection statistics, returning <code>true</code> if garbage
+ *  collection statistics was already disabled.
+ *
+ *     GC.disable_stats	  #=> false or true
+ *     GC.disable_stats	  #=> true
+ *
+ */
+
+VALUE
+rb_gc_disable_stats()
+{
+    rb_objspace_t *objspace = &rb_objspace;
+    int old = collect_gc_stats;
+    collect_gc_stats = 0;
+    return old ? Qtrue : Qfalse;
+}
+
+/*
+ *  call-seq:
+ *     GC.stats_enabled?    => true or false
+ *
+ *  Check whether GC stats have been enabled.
+ *
+ *     GC.stats_enabled?   #=> false or true
+ *
+ */
+
+VALUE
+rb_gc_stats_enabled()
+{
+    rb_objspace_t *objspace = &rb_objspace;
+    return collect_gc_stats ? Qtrue : Qfalse;
+}
+
+
+double rb_gc_total_time(void)
+{
+    return rb_objspace.profile.time;
+}
+
+/*
+ *  call-seq:
+ *     GC.time	  => Integer
+ *
+ *  Returns the time spent during garbage collection while GC statistics collection
+ *  was enabled (in micro seconds).
+ *
+ *     GC.time	  #=> 20000
+ *
+ */
+
+static VALUE
+gc_time()
+{
+    return DBL2NUM(1000000*rb_objspace.profile.time);
+}
+
+/*
+ *  call-seq:
+ *     GC.heap_slots	=> Integer
+ *
+ *  Returns the number of heap slots available for object allocations.
+ *
+ *     GC.heap_slots	#=> 10000
+ *
+ */
+VALUE
+rb_gc_heap_slots()
+{
+    rb_objspace_t *objspace = &rb_objspace;
+    return SIZET2NUM(heap_allocated_pages * HEAP_PAGE_OBJ_LIMIT);
+}
+
+/*
+ *  call-seq:
+ *     GC.heap_slots_live_after_last_gc	   => Integer
+ *
+ *  Returns the number of heap slots which were live after the last garbage collection.
+ *
+ *     GC.heap_slots_live_after_last_gc	   #=> 231223
+ *
+ */
+VALUE
+rb_gc_heap_slots_live_after_last_gc()
+{
+    rb_objspace_t *objspace = &rb_objspace;
+    return SIZET2NUM(objspace->profile.live_after_last_sweep);
+}
+
+/*
+ *  call-seq:
+ *     GC.total_mallocs	   => Integer
+ *
+ *  Returns the number malloc calls. Might wrap around.
+ *
+ *     GC.total_mallocs	   #=> 324234323246
+ *
+ */
+static VALUE
+gc_total_mallocs()
+{
+    return SIZET2NUM(rb_objspace.profile.total_mallocs);
+}
+size_t rb_gc_total_mallocs(void) {
+    return rb_objspace.profile.total_mallocs;
+}
+
+/*
+ *  call-seq:
+ *     GC.total_malloced_bytes	   => Integer
+ *
+ *  Returns the number of bytes allocated. Might wrap around.
+ *
+ *     GC.total_malloced_bytes	   #=> 354656256432446
+ *
+ */
+static VALUE
+gc_total_malloced_bytes()
+{
+    return SIZET2NUM(rb_objspace.profile.total_malloced_bytes);
+}
+size_t rb_gc_total_malloced_bytes(void) {
+    return rb_objspace.profile.total_malloced_bytes;
+}
+
 static int
 rgengc_unprotect_logging_exit_func_i(st_data_t key, st_data_t val, st_data_t arg)
 {
@@ -7813,6 +7972,10 @@ objspace_malloc_increase(rb_objspace_t *
 {
     if (new_size > old_size) {
 	ATOMIC_SIZE_ADD(malloc_increase, new_size - old_size);
+        if (collect_gc_stats) {
+            ATOMIC_SIZE_ADD(objspace->profile.total_mallocs, 1);
+            ATOMIC_SIZE_ADD(objspace->profile.total_malloced_bytes, new_size - old_size);
+        }
 #if RGENGC_ESTIMATE_OLDMALLOC
 	ATOMIC_SIZE_ADD(objspace->rgengc.oldmalloc_increase, new_size - old_size);
 #endif
@@ -8171,6 +8334,12 @@ gc_malloc_allocated_size(VALUE self)
     return UINT2NUM(rb_objspace.malloc_params.allocated_size);
 }
 
+size_t
+rb_gc_malloc_allocated_size(void)
+{
+    return rb_objspace.malloc_params.allocated_size;
+}
+
 /*
  *  call-seq:
  *     GC.malloc_allocations -> Integer
@@ -8185,6 +8354,12 @@ gc_malloc_allocations(VALUE self)
 {
     return UINT2NUM(rb_objspace.malloc_params.allocations);
 }
+
+size_t
+rb_gc_malloc_allocations(void)
+{
+    return rb_objspace.malloc_params.allocations;
+}
 #endif
 
 void
@@ -8741,6 +8916,14 @@ gc_prof_mark_timer_start(rb_objspace_t *
 #if GC_PROFILE_MORE_DETAIL
     if (gc_prof_enabled(objspace)) {
 	gc_prof_record(objspace)->gc_mark_time = getrusage_time();
+    } else {
+        if (collect_gc_stats) {
+          objspace->profile.gc_mark_start_time = getrusage_time();
+        }
+    }
+#else
+    if (collect_gc_stats) {
+        objspace->profile.gc_mark_start_time = getrusage_time();
     }
 #endif
 }
@@ -8753,6 +8936,17 @@ gc_prof_mark_timer_stop(rb_objspace_t *o
     if (gc_prof_enabled(objspace)) {
         gc_profile_record *record = gc_prof_record(objspace);
 	record->gc_mark_time = elapsed_time_from(record->gc_mark_time);
+        if (collect_gc_stats) {
+            objspace->profile.time += record->gc_mark_time;
+        }
+    } else {
+        if (collect_gc_stats) {
+            objspace->profile.time += elapsed_time_from(objspace->profile.gc_mark_start_time);
+        }
+    }
+#else
+    if (collect_gc_stats) {
+        objspace->profile.time += elapsed_time_from(objspace->profile.gc_mark_start_time);
     }
 #endif
 }
@@ -8764,9 +8958,13 @@ gc_prof_sweep_timer_start(rb_objspace_t
     if (gc_prof_enabled(objspace)) {
 	gc_profile_record *record = gc_prof_record(objspace);
 
-	if (record->gc_time > 0 || GC_PROFILE_MORE_DETAIL) {
+	if (record->gc_time > 0 || GC_PROFILE_MORE_DETAIL || collect_gc_stats) {
 	    objspace->profile.gc_sweep_start_time = getrusage_time();
-	}
+        }
+    } else {
+        if (collect_gc_stats) {
+            objspace->profile.gc_sweep_start_time = getrusage_time();
+        }
     }
 }
 
@@ -8783,16 +8981,30 @@ gc_prof_sweep_timer_stop(rb_objspace_t *
 	    sweep_time = elapsed_time_from(objspace->profile.gc_sweep_start_time);
 	    /* need to accumulate GC time for lazy sweep after gc() */
 	    record->gc_time += sweep_time;
+            if (collect_gc_stats) {
+                objspace->profile.time += sweep_time;
+            }
 	}
 	else if (GC_PROFILE_MORE_DETAIL) {
 	    sweep_time = elapsed_time_from(objspace->profile.gc_sweep_start_time);
-	}
+            if (collect_gc_stats) {
+                objspace->profile.time += sweep_time;
+            }
+	} else {
+            if (collect_gc_stats) {
+                objspace->profile.time += elapsed_time_from(objspace->profile.gc_sweep_start_time);
+            }
+        }
 
 #if GC_PROFILE_MORE_DETAIL
 	record->gc_sweep_time += sweep_time;
 	if (heap_pages_deferred_final) record->flags |= GPR_FLAG_HAVE_FINALIZE;
 #endif
 	if (heap_pages_deferred_final) objspace->profile.latest_gc_info |= GPR_FLAG_HAVE_FINALIZE;
+    } else {
+        if (collect_gc_stats) {
+            objspace->profile.time += elapsed_time_from(objspace->profile.gc_sweep_start_time);
+        }
     }
 }
 
@@ -8811,9 +9023,13 @@ gc_prof_set_malloc_info(rb_objspace_t *o
 static inline void
 gc_prof_set_heap_info(rb_objspace_t *objspace)
 {
+    if (objspace->profile.total_allocated_objects_at_gc_start > objspace->profile.total_freed_objects)
+        objspace->profile.live_after_last_sweep =
+            objspace->profile.total_allocated_objects_at_gc_start - objspace->profile.total_freed_objects;
+
     if (gc_prof_enabled(objspace)) {
 	gc_profile_record *record = gc_prof_record(objspace);
-	size_t live = objspace->profile.total_allocated_objects_at_gc_start - objspace->profile.total_freed_objects;
+        size_t live = objspace->profile.live_after_last_sweep;
 	size_t total = objspace->profile.heap_used_at_gc_start * HEAP_PAGE_OBJ_LIMIT;
 
 #if GC_PROFILE_MORE_DETAIL
@@ -9620,11 +9836,19 @@ Init_GC(void)
     rb_define_singleton_method(rb_mGC, "start", gc_start_internal, -1);
     rb_define_singleton_method(rb_mGC, "enable", rb_gc_enable, 0);
     rb_define_singleton_method(rb_mGC, "disable", rb_gc_disable, 0);
+    rb_define_singleton_method(rb_mGC, "enable_stats", rb_gc_enable_stats, 0);
+    rb_define_singleton_method(rb_mGC, "disable_stats", rb_gc_disable_stats, 0);
+    rb_define_singleton_method(rb_mGC, "stats_enabled?", rb_gc_stats_enabled, 0);
     rb_define_singleton_method(rb_mGC, "stress", gc_stress_get, 0);
     rb_define_singleton_method(rb_mGC, "stress=", gc_stress_set_m, 1);
     rb_define_singleton_method(rb_mGC, "count", gc_count, 0);
+    rb_define_singleton_method(rb_mGC, "time", gc_time, 0);
+    rb_define_singleton_method(rb_mGC, "total_mallocs", gc_total_mallocs, 0);
+    rb_define_singleton_method(rb_mGC, "total_malloced_bytes", gc_total_malloced_bytes, 0);
+    rb_define_singleton_method(rb_mGC, "heap_slots", rb_gc_heap_slots, 0);
     rb_define_singleton_method(rb_mGC, "stat", gc_stat, -1);
     rb_define_singleton_method(rb_mGC, "latest_gc_info", gc_latest_gc_info, -1);
+    rb_define_singleton_method(rb_mGC, "heap_slots_live_after_last_gc", rb_gc_heap_slots_live_after_last_gc, 0);
     rb_define_method(rb_mGC, "garbage_collect", gc_start_internal, -1);
 
     gc_constants = rb_hash_new();
diff -Nuarp ruby-2.5.8.a/include/ruby/intern.h ruby-2.5.8.b/include/ruby/intern.h
--- ruby-2.5.8.a/include/ruby/intern.h	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/include/ruby/intern.h	2020-11-15 18:00:59.795236200 -0500
@@ -478,6 +478,9 @@ void rb_gc_finalize_deferred(void);
 void rb_gc_call_finalizer_at_exit(void);
 VALUE rb_gc_enable(void);
 VALUE rb_gc_disable(void);
+VALUE rb_gc_enable_stats(void);
+VALUE rb_gc_disable_stats(void);
+VALUE rb_gc_stats_enabled(void);
 VALUE rb_gc_start(void);
 VALUE rb_define_finalizer(VALUE, VALUE);
 VALUE rb_undefine_finalizer(VALUE);
@@ -485,6 +488,11 @@ size_t rb_gc_count(void);
 size_t rb_gc_stat(VALUE);
 VALUE rb_gc_latest_gc_info(VALUE);
 void rb_gc_adjust_memory_usage(ssize_t);
+double rb_gc_total_time(void);
+VALUE rb_gc_heap_slots(void);
+VALUE rb_gc_heap_slots_live_after_last_gc(void);
+size_t rb_gc_total_mallocs(void);
+size_t rb_gc_total_malloced_bytes(void);
 /* hash.c */
 void st_foreach_safe(struct st_table *, int (*)(ANYARGS), st_data_t);
 VALUE rb_check_hash_type(VALUE);
diff -Nuarp ruby-2.5.8.a/lib/mkmf.rb ruby-2.5.8.b/lib/mkmf.rb
--- ruby-2.5.8.a/lib/mkmf.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/lib/mkmf.rb	2020-11-15 17:59:01.150142700 -0500
@@ -1900,7 +1900,7 @@ SRC
 SHELL = /bin/sh
 
 # V=0 quiet, V=1 verbose.  other values don't work.
-V = 0
+V = 1
 Q1 = $(V:1=)
 Q = $(Q1:0=@)
 ECHO1 = $(V:1=@ #{CONFIG['NULLCMD']})
diff -Nuarp ruby-2.5.8.a/lib/rdoc/ri/paths.rb ruby-2.5.8.b/lib/rdoc/ri/paths.rb
--- ruby-2.5.8.a/lib/rdoc/ri/paths.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/lib/rdoc/ri/paths.rb	2020-11-15 17:57:53.330012000 -0500
@@ -10,7 +10,7 @@ module RDoc::RI::Paths
   #:stopdoc:
   require 'rbconfig'
 
-  version = RbConfig::CONFIG['ruby_version']
+  version = RbConfig::CONFIG['ruby_version_dir_name'] || RbConfig::CONFIG['ruby_version']
 
   BASE    = if RbConfig::CONFIG.key? 'ridir' then
               File.join RbConfig::CONFIG['ridir'], version
diff -Nuarp ruby-2.5.8.a/lib/rubygems/defaults.rb ruby-2.5.8.b/lib/rubygems/defaults.rb
--- ruby-2.5.8.a/lib/rubygems/defaults.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/lib/rubygems/defaults.rb	2020-11-15 17:57:53.354983200 -0500
@@ -32,20 +32,20 @@ module Gem
              [
                File.dirname(RbConfig::CONFIG['sitedir']),
                'Gems',
-               RbConfig::CONFIG['ruby_version']
+               RbConfig::CONFIG['ruby_version_dir_name'] || RbConfig::CONFIG['ruby_version']
              ]
            elsif RbConfig::CONFIG['rubylibprefix'] then
              [
               RbConfig::CONFIG['rubylibprefix'],
               'gems',
-              RbConfig::CONFIG['ruby_version']
+              RbConfig::CONFIG['ruby_version_dir_name'] || RbConfig::CONFIG['ruby_version']
              ]
            else
              [
                RbConfig::CONFIG['libdir'],
                ruby_engine,
                'gems',
-               RbConfig::CONFIG['ruby_version']
+               RbConfig::CONFIG['ruby_version_dir_name'] || RbConfig::CONFIG['ruby_version']
              ]
            end
 
@@ -75,7 +75,8 @@ module Gem
 
   def self.user_dir
     parts = [Gem.user_home, '.gem', ruby_engine]
-    parts << RbConfig::CONFIG['ruby_version'] unless RbConfig::CONFIG['ruby_version'].empty?
+    ruby_version_dir_name = RbConfig::CONFIG['ruby_version_dir_name'] || RbConfig::CONFIG['ruby_version']
+    parts << ruby_version_dir_name unless ruby_version_dir_name.empty?
     File.join parts
   end
 
@@ -172,7 +173,7 @@ module Gem
     return nil unless RbConfig::CONFIG.key? 'vendordir'
 
     File.join RbConfig::CONFIG['vendordir'], 'gems',
-              RbConfig::CONFIG['ruby_version']
+              RbConfig::CONFIG['ruby_version_dir_name'] || RbConfig::CONFIG['ruby_version']
   end
 
   ##
diff -Nuarp ruby-2.5.8.a/loadpath.c ruby-2.5.8.b/loadpath.c
--- ruby-2.5.8.a/loadpath.c	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/loadpath.c	2020-11-15 17:58:48.198174300 -0500
@@ -65,22 +65,38 @@ const char ruby_initial_load_paths[] =
     RUBY_SEARCH_PATH "\0"
 #endif
 #ifndef NO_RUBY_SITE_LIB
+#ifdef RUBY_LIB_VERSION_BLANK
+    RUBY_SITE_LIB "\0"
+#else
     RUBY_SITE_LIB2 "\0"
+#endif
 #ifdef RUBY_THINARCH
     RUBY_SITE_ARCH_LIB_FOR(RUBY_THINARCH) "\0"
 #endif
     RUBY_SITE_ARCH_LIB_FOR(RUBY_SITEARCH) "\0"
+#ifndef RUBY_LIB_VERSION_BLANK
     RUBY_SITE_LIB "\0"
 #endif
+#endif
 
 #ifndef NO_RUBY_VENDOR_LIB
+#ifdef RUBY_LIB_VERSION_BLANK
+    RUBY_VENDOR_LIB "\0"
+#else
     RUBY_VENDOR_LIB2 "\0"
+#endif
 #ifdef RUBY_THINARCH
     RUBY_VENDOR_ARCH_LIB_FOR(RUBY_THINARCH) "\0"
 #endif
     RUBY_VENDOR_ARCH_LIB_FOR(RUBY_SITEARCH) "\0"
+#ifndef RUBY_LIB_VERSION_BLANK
     RUBY_VENDOR_LIB "\0"
 #endif
+#endif
+
+#ifdef RUBYGEMS_DIR
+    RUBYGEMS_DIR "\0"
+#endif
 
     RUBY_LIB "\0"
 #ifdef RUBY_THINARCH
diff -Nuarp ruby-2.5.8.a/Makefile.in ruby-2.5.8.b/Makefile.in
--- ruby-2.5.8.a/Makefile.in	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/Makefile.in	2020-11-15 17:59:13.980436400 -0500
@@ -119,6 +119,8 @@ XRUBY_RUBYLIBDIR = @XRUBY_RUBYLIBDIR@
 XRUBY_RUBYHDRDIR = @XRUBY_RUBYHDRDIR@
 BOOTSTRAPRUBY = @BOOTSTRAPRUBY@
 
+OPTIONAL_PRELUDES = @OPTIONAL_PRELUDES@
+
 #### End of system configuration section. ####
 
 MAJOR=	@MAJOR@
diff -Nuarp ruby-2.5.8.a/template/ruby.pc.in ruby-2.5.8.b/template/ruby.pc.in
--- ruby-2.5.8.a/template/ruby.pc.in	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/template/ruby.pc.in	2020-11-15 17:59:54.099005200 -0500
@@ -9,6 +9,7 @@ MAJOR=@MAJOR@
 MINOR=@MINOR@
 TEENY=@TEENY@
 ruby_version=@ruby_version@
+ruby_version_dir_name=@ruby_version_dir_name@
 RUBY_API_VERSION=@RUBY_API_VERSION@
 RUBY_PROGRAM_VERSION=@RUBY_PROGRAM_VERSION@
 RUBY_BASE_NAME=@RUBY_BASE_NAME@
@@ -38,6 +39,7 @@ sitehdrdir=@sitehdrdir@
 rubyarchhdrdir=@rubyarchhdrdir@
 vendorarchhdrdir=@vendorarchhdrdir@
 sitearchhdrdir=@sitearchhdrdir@
+MAINLIBS=@MAINLIBS@
 SOEXT=@SOEXT@
 LIBPATH=@LIBPATH@
 LIBRUBY_A=@LIBRUBY_A@
diff -Nuarp ruby-2.5.8.a/template/verconf.h.tmpl ruby-2.5.8.b/template/verconf.h.tmpl
--- ruby-2.5.8.a/template/verconf.h.tmpl	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/template/verconf.h.tmpl	2020-11-15 17:58:48.210399900 -0500
@@ -36,6 +36,9 @@
 % if C["RUBY_SEARCH_PATH"]
 #define RUBY_SEARCH_PATH		"${RUBY_SEARCH_PATH}"
 % end
+% if C["rubygemsdir"]
+#define RUBYGEMS_DIR			"${rubygemsdir}"
+% end
 %
 % R = {}
 % R["ruby_version"] = '"RUBY_LIB_VERSION"'
diff -Nuarp ruby-2.5.8.a/test/fiddle/helper.rb ruby-2.5.8.b/test/fiddle/helper.rb
--- ruby-2.5.8.a/test/fiddle/helper.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/test/fiddle/helper.rb	2020-11-15 17:59:40.751752100 -0500
@@ -6,95 +6,6 @@ require 'fiddle'
 
 libc_so = libm_so = nil
 
-case RUBY_PLATFORM
-when /cygwin/
-  libc_so = "cygwin1.dll"
-  libm_so = "cygwin1.dll"
-when /linux/
-  libdir = '/lib'
-  case [0].pack('L!').size
-  when 4
-    # 32-bit ruby
-    libdir = '/lib32' if File.directory? '/lib32'
-  when 8
-    # 64-bit ruby
-    libdir = '/lib64' if File.directory? '/lib64'
-  end
-  libc_so = File.join(libdir, "libc.so.6")
-  libm_so = File.join(libdir, "libm.so.6")
-when /mingw/, /mswin/
-  require "rbconfig"
-  crtname = RbConfig::CONFIG["RUBY_SO_NAME"][/msvc\w+/] || 'ucrtbase'
-  libc_so = libm_so = "#{crtname}.dll"
-when /darwin/
-  libc_so = "/usr/lib/libc.dylib"
-  libm_so = "/usr/lib/libm.dylib"
-when /kfreebsd/
-  libc_so = "/lib/libc.so.0.1"
-  libm_so = "/lib/libm.so.1"
-when /gnu/	#GNU/Hurd
-  libc_so = "/lib/libc.so.0.3"
-  libm_so = "/lib/libm.so.6"
-when /mirbsd/
-  libc_so = "/usr/lib/libc.so.41.10"
-  libm_so = "/usr/lib/libm.so.7.0"
-when /freebsd/
-  libc_so = "/lib/libc.so.7"
-  libm_so = "/lib/libm.so.5"
-when /bsd|dragonfly/
-  libc_so = "/usr/lib/libc.so"
-  libm_so = "/usr/lib/libm.so"
-when /solaris/
-  libdir = '/lib'
-  case [0].pack('L!').size
-  when 4
-    # 32-bit ruby
-    libdir = '/lib' if File.directory? '/lib'
-  when 8
-    # 64-bit ruby
-    libdir = '/lib/64' if File.directory? '/lib/64'
-  end
-  libc_so = File.join(libdir, "libc.so")
-  libm_so = File.join(libdir, "libm.so")
-when /aix/
-  pwd=Dir.pwd
-  libc_so = libm_so = "#{pwd}/libaixdltest.so"
-  unless File.exist? libc_so
-    cobjs=%w!strcpy.o!
-    mobjs=%w!floats.o sin.o!
-    funcs=%w!sin sinf strcpy strncpy!
-    expfile='dltest.exp'
-    require 'tmpdir'
-    Dir.mktmpdir do |dir|
-      begin
-        Dir.chdir dir
-        %x!/usr/bin/ar x /usr/lib/libc.a #{cobjs.join(' ')}!
-        %x!/usr/bin/ar x /usr/lib/libm.a #{mobjs.join(' ')}!
-        %x!echo "#{funcs.join("\n")}\n" > #{expfile}!
-        require 'rbconfig'
-        if RbConfig::CONFIG["GCC"] = 'yes'
-          lflag='-Wl,'
-        else
-          lflag=''
-        end
-        flags="#{lflag}-bE:#{expfile} #{lflag}-bnoentry -lm"
-        %x!#{RbConfig::CONFIG["LDSHARED"]} -o #{libc_so} #{(cobjs+mobjs).join(' ')} #{flags}!
-      ensure
-        Dir.chdir pwd
-      end
-    end
-  end
-else
-  libc_so = ARGV[0] if ARGV[0] && ARGV[0][0] == ?/
-  libm_so = ARGV[1] if ARGV[1] && ARGV[1][0] == ?/
-  if( !(libc_so && libm_so) )
-    $stderr.puts("libc and libm not found: #{$0} <libc> <libm>")
-  end
-end
-
-libc_so = nil if !libc_so || (libc_so[0] == ?/ && !File.file?(libc_so))
-libm_so = nil if !libm_so || (libm_so[0] == ?/ && !File.file?(libm_so))
-
 if !libc_so || !libm_so
   ruby = EnvUtil.rubybin
   ldd = `ldd #{ruby}`
diff -Nuarp ruby-2.5.8.a/test/rubygems/test_gem.rb ruby-2.5.8.b/test/rubygems/test_gem.rb
--- ruby-2.5.8.a/test/rubygems/test_gem.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/test/rubygems/test_gem.rb	2020-11-15 17:57:53.394149800 -0500
@@ -1191,7 +1191,8 @@ class TestGem < Gem::TestCase
 
   def test_self_user_dir
     parts = [@userhome, '.gem', Gem.ruby_engine]
-    parts << RbConfig::CONFIG['ruby_version'] unless RbConfig::CONFIG['ruby_version'].empty?
+    ruby_version_dir_name = RbConfig::CONFIG['ruby_version_dir_name'] || RbConfig::CONFIG['ruby_version']
+    parts << ruby_version_dir_name unless ruby_version_dir_name.empty?
 
     assert_equal File.join(parts), Gem.user_dir
   end
@@ -1318,7 +1319,7 @@ class TestGem < Gem::TestCase
   def test_self_vendor_dir
     expected =
       File.join RbConfig::CONFIG['vendordir'], 'gems',
-                RbConfig::CONFIG['ruby_version']
+                RbConfig::CONFIG['ruby_version_dir_name'] || RbConfig::CONFIG['ruby_version']
 
     assert_equal expected, Gem.vendor_dir
   end
diff -Nuarp ruby-2.5.8.a/test/rubygems/test_gem_ext_cmake_builder.rb ruby-2.5.8.b/test/rubygems/test_gem_ext_cmake_builder.rb
--- ruby-2.5.8.a/test/rubygems/test_gem_ext_cmake_builder.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/test/rubygems/test_gem_ext_cmake_builder.rb	2020-11-15 18:00:07.034898200 -0500
@@ -25,6 +25,7 @@ class TestGemExtCmakeBuilder < Gem::Test
     File.open File.join(@ext, 'CMakeLists.txt'), 'w' do |cmakelists|
       cmakelists.write <<-eo_cmake
 cmake_minimum_required(VERSION 2.6)
+project(self_build LANGUAGES NONE)
 install (FILES test.txt DESTINATION bin)
       eo_cmake
     end
diff -Nuarp ruby-2.5.8.a/tool/mkconfig.rb ruby-2.5.8.b/tool/mkconfig.rb
--- ruby-2.5.8.a/tool/mkconfig.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/tool/mkconfig.rb	2020-11-15 17:58:08.370384800 -0500
@@ -111,7 +111,7 @@ File.foreach "config.status" do |line|
     val = val.gsub(/\$(?:\$|\{?(\w+)\}?)/) {$1 ? "$(#{$1})" : $&}.dump
     case name
     when /^prefix$/
-      val = "(TOPDIR || DESTDIR + #{val})"
+      val = "(((TOPDIR && TOPDIR.empty?) ? nil : TOPDIR) || DESTDIR + #{val})"
     when /^ARCH_FLAG$/
       val = "arch_flag || #{val}" if universal
     when /^UNIVERSAL_ARCHNAMES$/
diff -Nuarp ruby-2.5.8.a/tool/rbinstall.rb ruby-2.5.8.b/tool/rbinstall.rb
--- ruby-2.5.8.a/tool/rbinstall.rb	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/tool/rbinstall.rb	2020-11-15 17:58:48.224160000 -0500
@@ -335,6 +335,7 @@ if CONFIG["vendordir"]
   vendorlibdir = CONFIG["vendorlibdir"]
   vendorarchlibdir = CONFIG["vendorarchdir"]
 end
+rubygemsdir = CONFIG["rubygemsdir"]
 mandir = CONFIG["mandir", true]
 docdir = CONFIG["docdir", true]
 configure_args = Shellwords.shellwords(CONFIG["configure_args"])
@@ -421,7 +422,7 @@ end
 
 install?(:doc, :rdoc) do
   if $rdocdir
-    ridatadir = File.join(CONFIG['ridir'], CONFIG['ruby_version'], "system")
+    ridatadir = File.join(CONFIG['ridir'], CONFIG['ruby_version_dir_name'] || CONFIG['ruby_version'], "system")
     prepare "rdoc", ridatadir
     install_recursive($rdocdir, ridatadir, :mode => $data_mode)
   end
@@ -541,7 +542,13 @@ end
 install?(:local, :comm, :lib) do
   prepare "library scripts", rubylibdir
   noinst = %w[*.txt *.rdoc *.gemspec]
+  noinst += %w[rubygems.rb rubygems/ datadir.rb] if rubygemsdir
   install_recursive(File.join(srcdir, "lib"), rubylibdir, :no_install => noinst, :mode => $data_mode)
+  if rubygemsdir
+    noinst = %w[obsolete.rb]
+    install_recursive(File.join(srcdir, "lib", "rubygems"), File.join(rubygemsdir, "rubygems"), :mode => $data_mode)
+    install(File.join(srcdir, "lib", "rubygems.rb"), File.join(rubygemsdir, "rubygems.rb"), :mode => $data_mode)
+  end
 end
 
 install?(:local, :comm, :hdr, :'comm-hdr') do
diff -Nuarp ruby-2.5.8.a/win32/Makefile.sub ruby-2.5.8.b/win32/Makefile.sub
--- ruby-2.5.8.a/win32/Makefile.sub	2020-03-31 08:15:56.000000000 -0400
+++ ruby-2.5.8.b/win32/Makefile.sub	2020-11-15 17:59:54.110150000 -0500
@@ -279,6 +279,7 @@ LDSHARED_2 = @if exist $(@).manifest @$(
 CPPFLAGS = $(DEFS) $(ARCHDEFS) $(CPPFLAGS)
 
 DLDFLAGS = $(LDFLAGS) -dll
+MAINLIBS = $(LIBS)
 SOLIBS =
 RCFILES = $(RUBY_INSTALL_NAME).rc $(RUBYW_INSTALL_NAME).rc $(RUBY_SO_NAME).rc
 !ifndef RCFLAGS
@@ -821,7 +822,8 @@ s,@CPPFLAGS@,$(CPPFLAGS),;t t
 s,@CXXFLAGS@,$(CXXFLAGS),;t t
 s,@FFLAGS@,$(FFLAGS),;t t
 s,@LDFLAGS@,$(LDFLAGS),;t t
-s,@LIBS@,$(LIBS),;t t
+s,@LIBS@,,;t t
+s,@MAINLIBS@,$(MAINLIBS),;t t
 s,@exec_prefix@,$${prefix},;t t
 s,@prefix@,$(prefix),;t t
 s,@program_transform_name@,s,.*,$(PROGRAM_PREFIX)&$(PROGRAM_SUFFIX),,;t t
@@ -909,7 +911,7 @@ s,@LIBRUBY_SO@,$$(RUBY_SO_NAME).dll,;t t
 s,@LIBRUBY_ALIASES@,$(LIBRUBY_ALIASES),;t t
 s,@LIBRUBY@,$$(RUBY_SO_NAME).lib,;t t
 s,@LIBRUBYARG@,$$(LIBRUBYARG_SHARED),;t t
-s,@LIBRUBYARG_STATIC@,$$(LIBRUBY_A),;t t
+s,@LIBRUBYARG_STATIC@,$$(LIBRUBY_A) $$(MAINLIBS),;t t
 s,@LIBRUBYARG_SHARED@,$$(LIBRUBY),;t t
 s,@SOLIBS@,$(SOLIBS),;t t
 s,@DLDLIBS@,$(DLDLIBS),;t t
